{"remainingRequest":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\index_v2.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\index_v2.vue","mtime":1720420573976},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1720430444357},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1720430443512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index_v2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index_v2.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row>\r\n      <el-col :span=\"24\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\"><span>服务器基本信息</span></div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <table cellspacing=\"0\" style=\"width: 100%\">\r\n              <tbody>\r\n                <tr>\r\n                  <td  class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">Python版本</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{ deviceinfo.python_version }}\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">运行模式</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{\r\n                        deviceinfo.device_count >= 1  ? \"单机\" : \"集群\"\r\n                      }}\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">GPU型号</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{ deviceinfo.gpu_name }}\r\n                      <!-- NVIDIA GeForce RTX 3060 Laptop GPU -->\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">CPU占用</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{ deviceinfo.cpu_usage }}\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">内存占用</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{ deviceinfo.ram_usage }}\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">CPU型号</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{\r\n                        deviceinfo.cpu_name\r\n                      }}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">CUDA版本</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{ deviceinfo.cuda_version != undefined? 'deviceinfo.cuda_version':'无CUDA'}}\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">GPU数量</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{ deviceinfo.device_count }}\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\">操作系统</div>\r\n                  </td>\r\n                  <td class=\"el-table__cell is-leaf\">\r\n                    <div class=\"cell\" v-if=\"deviceinfo\">\r\n                      {{ deviceinfo.platform }}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\"><span>命令统计</span></div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"commandstats\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\">\r\n            <span>内存信息</span>\r\n          </div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"usedmemory\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDeviceInfo } from \"@/api/index\";\r\nimport echarts from \"echarts\";\r\n\r\nexport default {\r\n  name: \"Server\",\r\n  data() {\r\n    return {\r\n      // 统计命令信息\r\n      commandstats: null,\r\n      // 使用内存\r\n      usedmemory: null,\r\n      // deviceinfo信息\r\n      deviceinfo:[],\r\n      infoo: {\r\n        commandStats: [\r\n          {\r\n            name: \"put\",\r\n            value: \"100\",\r\n          },\r\n          {\r\n            name: \"delete\",\r\n            value: \"90\",\r\n          },\r\n          {\r\n            name: \"get\",\r\n            value: \"213\",\r\n          },\r\n          {\r\n            name: \"post\",\r\n            value: \"111\",\r\n          },\r\n        ],\r\n        info: {\r\n          aof_rewrite_scheduled: \"0\",\r\n          number_of_cached_scripts: \"6\",\r\n          mem_clients_slaves: \"0\",\r\n          keyspace_misses: \"27236\",\r\n          mem_allocator: \"jemalloc-5.1.0\",\r\n          multiplexing_api: \"epoll\",\r\n          aof_last_write_status: \"ok\",\r\n          used_memory_peak_perc: \"24.27%\",\r\n          run_id: \"a83fe9cb173376d9cd893432aed6b6d6f8a0f6f7\",\r\n          uptime_in_seconds: \"54221010\",\r\n          maxmemory: \"0\",\r\n          active_defrag_hits: \"0\",\r\n          atomicvar_api: \"atomic-builtin\",\r\n          total_system_memory_human: \"7.38G\",\r\n          gcc_version: \"4.8.5\",\r\n          second_repl_offset: \"-1\",\r\n          arch_bits: \"64\",\r\n          master_repl_offset: \"0\",\r\n          instantaneous_output_kbps: \"0.00\",\r\n          total_commands_processed: \"5671508\",\r\n          repl_backlog_size: \"1048576\",\r\n          sync_full: \"0\",\r\n          sync_partial_err: \"0\",\r\n          aof_last_cow_size: \"0\",\r\n          configured_hz: \"10\",\r\n          used_memory_startup: \"791336\",\r\n          mem_clients_normal: \"414474\",\r\n          used_cpu_user: \"32396.590381\",\r\n          aof_enabled: \"0\",\r\n          redis_mode: \"standalone\",\r\n          rdb_changes_since_last_save: \"43\",\r\n          used_memory_lua: \"49152\",\r\n          redis_build_id: \"6ad10c5f357d0c98\",\r\n          connected_slaves: \"0\",\r\n          expired_keys: \"22113\",\r\n          used_memory: \"1656168\",\r\n          active_defrag_misses: \"0\",\r\n          active_defrag_key_misses: \"0\",\r\n          used_memory_rss: \"7852032\",\r\n          rdb_last_bgsave_status: \"ok\",\r\n          process_id: \"1564\",\r\n          rejected_connections: \"0\",\r\n          master_replid: \"5d5f0baf9916fb92f3918568e9a1ed669acc1c64\",\r\n          used_memory_rss_human: \"7.49M\",\r\n          used_memory_scripts: \"9104\",\r\n          rdb_bgsave_in_progress: \"0\",\r\n          rdb_last_cow_size: \"598016\",\r\n          cluster_enabled: \"0\",\r\n          tcp_port: \"6379\",\r\n          os: \"Linux 3.10.0-957.21.3.el7.x86_64 x86_64\",\r\n          mem_replication_backlog: \"0\",\r\n          aof_current_rewrite_time_sec: \"-1\",\r\n          allocator_rss_ratio: \"2.61\",\r\n          used_memory_overhead: \"1229194\",\r\n          repl_backlog_histlen: \"0\",\r\n          slave_expires_tracked_keys: \"0\",\r\n          used_cpu_sys: \"22403.694067\",\r\n          role: \"master\",\r\n          used_memory_dataset_perc: \"49.37%\",\r\n          expired_stale_perc: \"0.00\",\r\n          allocator_frag_ratio: \"1.31\",\r\n          client_recent_max_input_buffer: \"2\",\r\n          aof_last_bgrewrite_status: \"ok\",\r\n          used_memory_peak_human: \"6.51M\",\r\n          hz: \"10\",\r\n          used_memory_human: \"1.58M\",\r\n          maxmemory_policy: \"noeviction\",\r\n          rss_overhead_ratio: \"1.67\",\r\n          mem_fragmentation_ratio: \"5.92\",\r\n          rdb_last_bgsave_time_sec: \"0\",\r\n          allocator_allocated: \"1382736\",\r\n          used_memory_dataset: \"426974\",\r\n          blocked_clients: \"0\",\r\n          used_cpu_sys_children: \"9.985084\",\r\n          repl_backlog_active: \"0\",\r\n          used_cpu_user_children: \"22.983138\",\r\n          sync_partial_ok: \"0\",\r\n          aof_rewrite_in_progress: \"0\",\r\n          redis_git_sha1: \"00000000\",\r\n          rdb_current_bgsave_time_sec: \"-1\",\r\n          active_defrag_running: \"0\",\r\n          aof_last_rewrite_time_sec: \"-1\",\r\n          master_replid2: \"0000000000000000000000000000000000000000\",\r\n          config_file: \"/etc/redis/6379.conf\",\r\n          lazyfree_pending_objects: \"0\",\r\n          used_memory_scripts_human: \"8.89K\",\r\n          loading: \"0\",\r\n          db5: \"keys=104,expires=28,avg_ttl=5226497549\",\r\n          db4: \"keys=29,expires=0,avg_ttl=0\",\r\n          allocator_rss_bytes: \"2899968\",\r\n          pubsub_channels: \"0\",\r\n          used_memory_lua_human: \"48.00K\",\r\n          db0: \"keys=106,expires=6,avg_ttl=76351644\",\r\n          active_defrag_key_hits: \"0\",\r\n          allocator_frag_bytes: \"423600\",\r\n          migrate_cached_sockets: \"0\",\r\n          redis_git_dirty: \"0\",\r\n          total_system_memory: \"7919116288\",\r\n          mem_aof_buffer: \"0\",\r\n          rss_overhead_bytes: \"3145728\",\r\n          client_recent_max_output_buffer: \"0\",\r\n          connected_clients: \"9\",\r\n          mem_fragmentation_bytes: \"6524560\",\r\n          lru_clock: \"4097422\",\r\n          pubsub_patterns: \"0\",\r\n          expired_time_cap_reached_count: \"0\",\r\n          repl_backlog_first_byte_offset: \"0\",\r\n          total_net_output_bytes: \"101708305\",\r\n          executable: \"/usr/local/bin/redis-server\",\r\n          evicted_keys: \"0\",\r\n          total_connections_received: \"60143\",\r\n          allocator_active: \"1806336\",\r\n          mem_not_counted_for_evict: \"0\",\r\n          redis_version: \"5.0.5\",\r\n          total_net_input_bytes: \"189315751\",\r\n          latest_fork_usec: \"350\",\r\n          maxmemory_human: \"0B\",\r\n          used_memory_peak: \"6822840\",\r\n          allocator_resident: \"4706304\",\r\n          keyspace_hits: \"126530\",\r\n          uptime_in_days: \"627\",\r\n          instantaneous_input_kbps: \"0.00\",\r\n          instantaneous_ops_per_sec: \"0\",\r\n          rdb_last_save_time: \"1698596187\",\r\n        },\r\n        dbSize: 106,\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    getDeviceInfo().then(res=>{\r\n      // console.log(`output->res`,res)\r\n      this.deviceinfo=res.device_info\r\n\r\n      this.commandstats = echarts.init(this.$refs.commandstats, \"macarons\");\r\n        this.commandstats.setOption({\r\n          tooltip: {\r\n            trigger: \"item\",\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n          },\r\n          series: [\r\n            {\r\n              name: \"命令\",\r\n              type: \"pie\",\r\n              roseType: \"radius\",\r\n              radius: [15, 95],\r\n              center: [\"50%\", \"38%\"],\r\n              data: this.infoo.commandStats,\r\n              animationEasing: \"cubicInOut\",\r\n              animationDuration: 1000,\r\n            }\r\n          ]\r\n        });\r\n        this.usedmemory = echarts.init(this.$refs.usedmemory, \"macarons\");\r\n        this.usedmemory.setOption({\r\n          tooltip: {\r\n            formatter: \"{b} <br/>{a} : \" +  this.deviceinfo.memused,\r\n          },\r\n          series: [\r\n            {\r\n              name: \"峰值\",\r\n              type: \"gauge\",\r\n              min: 0,\r\n              max: this.deviceinfo.memtotal,\r\n              detail: {\r\n                formatter: this.deviceinfo.memused,\r\n              },\r\n              data: [\r\n                {\r\n                  value: parseFloat( this.deviceinfo.memused),\r\n                  name: \"内存消耗\",\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        });\r\n    })\r\n\r\n  },\r\n  mounted(){\r\n    // this.startSocket();\r\n  },\r\n  methods: {\r\n    // async startSocket() {\r\n    //   // 这里是 username\r\n    //   socketService.init(\"warning-all\");\r\n    //   try {\r\n    //     const msg = await socketService.getMessage();\r\n    //     console.log(`output->msg`,msg)\r\n    //     //打印出来 服务器给我的信息\r\n    //     console.log(JSON.parse(msg.data));\r\n    //     // console.log(`output->msg`,msg)\r\n    //   } catch (error) {\r\n    //     // console.error(\"Error receiving message:\", error);\r\n    //   }\r\n    // },\r\n    \r\n  },\r\n  destroyed(){\r\n    // socketService.close()\r\n  }\r\n};\r\n</script>\r\n"]}]}