{"remainingRequest":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\model\\config\\index.vue?vue&type=style&index=0&id=b1e2a1f6&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\model\\config\\index.vue","mtime":1720420573977},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1720430442968},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1720430443551},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1720430442809},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1720430443512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5lbC10YWJzIHsNCiAgd2lkdGg6IDUwJTsNCiAgbWFyZ2luOiBhdXRvOw0KfQ0KDQppbWcgew0KICBtYXgtd2lkdGg6IDEwMCU7DQogIGhlaWdodDogYXV0bzsNCn0NCg0KLml0ZW0gew0KICBtYXJnaW4tYm90dG9tOiAxOHB4Ow0KfQ0KDQouYm94LWNhcmQgew0KICB3aWR0aDogNTAlOw0KICBtYXJnaW46IGF1dG87DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingssqBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/model/config","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"4\"\r\n              :xs=\"24\">\r\n        <div class=\"head-container\">\r\n          <el-input v-model=\"selectt\"\r\n                    placeholder=\"请输入模型名称\"\r\n                    clearable\r\n                    size=\"small\"\r\n                    prefix-icon=\"el-icon-search\"\r\n                    style=\"margin-bottom: 20px\"\r\n                    @input=\"searchExp\" />\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"4\"\r\n              :offset=\"16\"><el-button type=\"primary\"\r\n                   icon=\"el-icon-plus\"\r\n                   @click=\"dialogVisible = true;\">新建实验</el-button>\r\n        <el-button type=\"info\"\r\n                   plain\r\n                   icon=\"el-icon-delete\"\r\n                   :disabled=\"multiple\"\r\n                   @click=\"handleDelete\">删除</el-button></el-col>\r\n\r\n      <el-table :data=\"searchData\"\r\n                style=\"width: 100%\"\r\n                v-loading=\"loading\"\r\n                @selection-change=\"handleSelectionChange\"\r\n                ref=\"isExpand\"\r\n                @expand-change=\"handleDetail\">\r\n        <el-table-column prop=\"select\"\r\n                         type=\"selection\"\r\n                         width=\"180\"\r\n                         align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"props\">\r\n            <el-tabs v-model=\"tab\"\r\n                     :stretch=\"true\"\r\n                     type=\"border-card\">\r\n              <!-- <el-tabs\r\n              v-model=\"tab\"\r\n              :stretch=\"true\"\r\n              type=\"border-card\"\r\n              @tab-click=\"loadImage(props.row, tab)\"\r\n            > -->\r\n              <el-tab-pane label=\"详细信息\"\r\n                           name=\"details\">\r\n                <div style=\"display: flex\">\r\n                  <el-form label-position=\"left\"\r\n                           style=\"width: 50%\">\r\n                    <el-form-item label=\"模型名称:\">\r\n                      <span>{{ props.row.model_name }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"模型描述:\">\r\n                      <span>{{ props.row.model_description }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"模型类型:\">\r\n                      <span>{{ props.row.network }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"选择数据集:\">\r\n                      <span>{{ props.row.dataset }}</span>\r\n                    </el-form-item>\r\n                  </el-form>\r\n                  <div style=\"margin-left: 20%\">\r\n                    <h1>训练进度：</h1>\r\n                    <el-progress type=\"circle\"\r\n                                 :percentage=\"props.row.percentage\"\r\n                                 :status=\"props.row.process\"\r\n                                 :color=\"colors\"></el-progress>\r\n                  </div>\r\n                </div>\r\n\r\n                <el-card shadow=\"always\"\r\n                         class=\"box-card\">\r\n                  <h1>\r\n                    <span>参数</span>\r\n                    <el-button style=\"float: right; padding: 3px 0\"\r\n                               type=\"text\"\r\n                               @click=\"handleModify(props.row)\">修改参数</el-button>\r\n                  </h1>\r\n                  <div v-for=\"(v, k) in props.row.params\"\r\n                       :key=\"k\"\r\n                       class=\"text item\">\r\n                    {{ k + \" : \" + v }}\r\n                  </div>\r\n                </el-card>\r\n              </el-tab-pane>\r\n              <el-tab-pane label=\"训练结果\"\r\n                           name=\"result\">\r\n                <img v-if=\"props.row.imagePath\"\r\n                     :src=\"props.row.imagePath\"\r\n                     alt=\"Image\" />\r\n                <!-- <el-button v-if=\"props.row.imagePath\" @click=\"download(props.row)\">下载模型</el-button> -->\r\n                <a :href=\"props.row.modelPath\"\r\n                   v-if=\"props.row.modelPath\"\r\n                   download=\"model.pth\"><el-button>下载模型</el-button></a>\r\n\r\n                <h1 v-if=\"!props.row.imagePath\">还未开始训练</h1>\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"model_name\"\r\n                         label=\"模型名字\"\r\n                         width=\"250\"\r\n                         align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"model_description\"\r\n                         label=\"模型描述\"\r\n                         align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"network\"\r\n                         label=\"选择网络\"\r\n                         align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"dataset\"\r\n                         label=\"选择数据集\"\r\n                         align=\"center\">\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"状态\"\r\n                         align=\"center\"><template slot-scope=\"scope\">\r\n            <dict-tag :options=\"dict.type.train_status\"\r\n                      :value=\"scope.row.status\">\r\n            </dict-tag> </template></el-table-column>\r\n        <el-table-column label=\"训练\"\r\n                         align=\"center\"><template slot-scope=\"scope\">\r\n            <el-button type=\"text\"\r\n                       icon=\"el-icon-view\"\r\n                       @click=\"viewRes(scope.row)\">查看训练结果</el-button>\r\n            <el-button type=\"text\"\r\n                       icon=\"el-icon-view\"\r\n                       @click=\"viewHis(scope.row)\">查看训练历史</el-button>\r\n          </template></el-table-column>\r\n        <el-table-column label=\"操作\"\r\n                         align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\"\r\n                       icon=\"el-icon-delete\"\r\n                       @click=\"handleDelete(scope.row)\">删除</el-button>\r\n            <el-button type=\"text\"\r\n                       icon=\"el-icon-edit\"\r\n                       @click=\"handleModify(scope.row)\">修改</el-button>\r\n            <el-button type=\"text\"\r\n                       icon=\"el-icon-video-play\"\r\n                       @click=\"handleTrain(scope.row)\">开始训练</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <el-dialog title=\"配置参数\"\r\n                 :visible.sync=\"datasetVisible\"\r\n                 width=\"30%\">\r\n        <el-card>\r\n          <el-form ref=\"form\"\r\n                   :model=\"form\"\r\n                   :rules=\"rules\"\r\n                   name=\"form\">\r\n            <el-form-item label=\"输入模型名称:\"\r\n                          prop=\"model_name\">\r\n              <el-input v-model=\"form.model_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"输入模型描述:\"\r\n                          prop=\"model_description\">\r\n              <el-input v-model=\"form.model_description\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"选择模型类型:\"\r\n                          prop=\"model_type\">\r\n              <el-select v-model=\"form.chosenmodeltype\"\r\n                         placeholder=\"请选择\"\r\n                         @change=\"showModel\">\r\n                <el-option v-for=\"item in form.model_type\"\r\n                           :key=\"item.value\"\r\n                           :label=\"item.label\"\r\n                           :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"选择模型:\"\r\n                          prop=\"model\">\r\n              <el-select v-model=\"form.chosenmodel\"\r\n                         placeholder=\"请选择\"\r\n                         @change=\"showParam\">\r\n                <el-option v-for=\"item in form.model\"\r\n                           :key=\"item.value\"\r\n                           :label=\"item.label\"\r\n                           :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <div v-for=\"(v, k) in form.params\">\r\n              <el-form-item>\r\n                <span>{{ v }}: </span>\r\n                <el-input style=\"width: 20%; margin-right: 10px\"\r\n                          type=\"number\"\r\n                          v-model=\"form.paramlist[k]\"></el-input>\r\n              </el-form-item>\r\n            </div>\r\n            <el-button @click=\"onSubmit\">提交</el-button>\r\n            <el-button @click=\"datasetVisible=false\">取消</el-button>\r\n          </el-form>\r\n        </el-card>\r\n      </el-dialog>\r\n\r\n      <el-dialog title=\"新建实验\"\r\n                 :visible.sync=\"dialogVisible\"\r\n                 width=\"30%\">\r\n        <el-steps :active=\"active\"\r\n                  finish-status=\"success\">\r\n          <el-step title=\"输入模型功能\"></el-step>\r\n          <el-step title=\"选择数据集\"></el-step>\r\n          <el-step title=\"选择网络模型\"></el-step>\r\n        </el-steps>\r\n        <el-form ref=\"form\"\r\n                 :model=\"form\"\r\n                 :rules=\"rules\"\r\n                 name=\"form\">\r\n          <el-card v-show=\"visible.card1\">\r\n            <el-form-item label=\"输入模型名称:\"\r\n                          prop=\"model_name\">\r\n              <el-input v-model=\"form.model_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"输入模型描述:\"\r\n                          prop=\"model_description\">\r\n              <el-input v-model=\"form.model_description\"></el-input>\r\n            </el-form-item>\r\n            <el-button @click=\"getModelParamPlus\">下一步</el-button>\r\n          </el-card>\r\n\r\n          <el-card v-show=\"visible.card2\">\r\n            <el-form-item label=\"选择根数据集:\"\r\n                          prop=\"dataset\">\r\n              <el-select v-model=\"form.chosendataset\"\r\n                         placeholder=\"请选择\"\r\n                         @change=\"getChildDataset\">\r\n                <el-option v-for=\"item in form.dataset\"\r\n                           :key=\"item.value\"\r\n                           :label=\"item.label\"\r\n                           :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"选择自定义数据集:\"\r\n                          prop=\"childDataset\">\r\n              <el-select v-model=\"form.chosenChildDataset\"\r\n                         placeholder=\"请选择\"\r\n                         @change=\"\">\r\n                <el-option v-for=\"item in form.childDataset\"\r\n                           :key=\"item.value\"\r\n                           :label=\"item.label\"\r\n                           :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n\r\n            <el-button @click=\"\r\n                next();\r\n                show();\r\n              \">下一步</el-button>\r\n            <el-button @click=\"prev\">上一步</el-button>\r\n          </el-card>\r\n\r\n          <el-card v-show=\"visible.card3\">\r\n            <el-form-item label=\"选择模型类型:\"\r\n                          prop=\"model_type\">\r\n              <el-select v-model=\"form.chosenmodeltype\"\r\n                         placeholder=\"请选择\"\r\n                         @change=\"showModel\">\r\n                <el-option v-for=\"item in form.model_type\"\r\n                           :key=\"item.value\"\r\n                           :label=\"item.label\"\r\n                           :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"选择模型:\"\r\n                          prop=\"model\">\r\n              <el-select v-model=\"form.chosenmodel\"\r\n                         placeholder=\"请选择\"\r\n                         @change=\"showParam\">\r\n                <el-option v-for=\"item in form.model\"\r\n                           :key=\"item.value\"\r\n                           :label=\"item.label\"\r\n                           :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <div v-for=\"(v, k) in form.params\">\r\n              <el-form-item>\r\n                <span>{{ v }}: </span>\r\n                <el-input style=\"width: 20%; margin-right: 10px\"\r\n                          type=\"number\"\r\n                          v-model=\"form.paramlist[k]\"></el-input>\r\n              </el-form-item>\r\n            </div>\r\n            <el-button @click=\"prev\">上一步</el-button>\r\n            <el-button @click=\"onSubmit\">提交</el-button>\r\n          </el-card>\r\n        </el-form>\r\n      </el-dialog>\r\n\r\n      <el-dialog title=\"修改参数\"\r\n                 :visible.sync=\"paramsDialogVisible\"\r\n                 width=\"30%\">\r\n        <el-form ref=\"form\"\r\n                 :model=\"modifyParams\"\r\n                 :rules=\"rules\"\r\n                 name=\"form\">\r\n          <el-card>\r\n            <template>\r\n              <div v-for=\"(v, k) in modifyParams\">\r\n                <el-form-item>\r\n                  <span>{{ k }}: </span>\r\n                  <el-input style=\"width: 20%; margin-right: 10px\"\r\n                            type=\"number\"\r\n                            v-model=\"modifyParams[k]\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </template>\r\n          </el-card>\r\n        </el-form>\r\n        <el-button style=\"margin-top: 30px\"\r\n                   @click=\"onModifySubmit\">提交</el-button>\r\n      </el-dialog>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {\r\n  uploadModel,\r\n  getModel,\r\n  delModelById,\r\n  modifyParams,\r\n  startTrain,\r\n  getPic,\r\n  download\r\n} from \"@/api/model/model\";\r\nimport {\r\n  getNetworkFunction,\r\n  getListByCat,\r\n  getNetwork,\r\n  getDataset,\r\n  getChildDataset,\r\n} from \"@/api/model/upload\";\r\nexport default {\r\n  name: \"Config\",\r\n  dicts: [\"train_status\"],\r\n  data () {\r\n    return {\r\n      // imagePath:'',\r\n      visible: {\r\n        card1: 1,\r\n        card2: 0,\r\n        card3: 0,\r\n      },\r\n      tab: \"details\",\r\n      active: 0,\r\n      ids: [],\r\n      names: [],\r\n      total: 330,\r\n      loading: false,\r\n      multiple: true,\r\n      single: true,\r\n      // percentage: 0,\r\n      // status: undefined,\r\n      // tagText: \"未开始\",\r\n      colors: [\r\n        { color: \"#f56c6c\", percentage: 20 },\r\n        { color: \"#e6a23c\", percentage: 40 },\r\n        { color: \"#6f7ad3\", percentage: 60 },\r\n        { color: \"#1989fa\", percentage: 80 },\r\n        { color: \"#5cb87a\", percentage: 100 },\r\n      ],\r\n      form: {\r\n        model_name: \"CNN\",\r\n        model_description: \"chenhai\",\r\n        dataset: [],\r\n        childDataset: [],\r\n        chosenmodeltype: \"回归\",\r\n        chosenmodel: \"\",\r\n        chosendataset: \"test2\",\r\n        chosenChildDataset: \"\",\r\n        params: [],\r\n        chosenParams: [],\r\n        paramlist: [],\r\n        model_type: [],\r\n        model: [],\r\n      },\r\n      modifyParams: {},\r\n      modifyId: \"\",\r\n      rules: {\r\n        model_name: [\r\n          { required: true, message: \"请输入模型名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      dialogVisible: false,\r\n      datasetVisible: false,\r\n      paramsDialogVisible: false,\r\n      selectt: \"\",\r\n      tableData: [],\r\n      searchData: [],\r\n      // data: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    next () {\r\n      if (this.active++ > 2) this.active = 0;\r\n      if (this.active == 0) {\r\n        this.visible = { card1: 1, card2: 0, card3: 0 };\r\n      } else if (this.active == 1) {\r\n        this.visible = { card1: 0, card2: 1, card3: 0 };\r\n      } else {\r\n        this.visible = { card1: 0, card2: 0, card3: 1 };\r\n      }\r\n    },\r\n    prev () {\r\n      if (this.active-- < 0) this.active = 0;\r\n      if (this.active == 1) {\r\n        this.visible = { card1: 0, card2: 1, card3: 0 };\r\n      } else if (this.active == 2) {\r\n        this.visible = { card1: 0, card2: 1, card3: 0 };\r\n      } else {\r\n        this.visible = { card1: 1, card2: 0, card3: 0 };\r\n      }\r\n    },\r\n    beforeRemove (file, fileList) {\r\n      return this.$confirm(`确定移除 ${file.name}？`);\r\n    },\r\n    handleUploadFile (file, fileList) {\r\n      this.form.datafile = file.raw;\r\n    },\r\n    handleSelectionChange (selection) {\r\n      this.ids = selection.map((item) => item.id);\r\n      this.names = selection.map((item) => item.model_name);\r\n      this.single = selection.length != 1;\r\n      this.multiple = !selection.length;\r\n    },\r\n    handleDelete (row) {\r\n      const id = row.id || this.ids;\r\n      const name = row.model_name || this.names;\r\n      this.$modal\r\n        .confirm('是否确认删除名称为\"' + name + '\"的数据项？')\r\n        .then(function () {\r\n          return delModelById(id);\r\n        })\r\n        .then(() => {\r\n          this.getList();\r\n          this.$modal.msgSuccess(\"删除成功\");\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(\"删除失败\");\r\n        });\r\n    },\r\n    handleModelList (arr) {\r\n      return arr.map((item) => {\r\n        return {\r\n          value: item.id,\r\n          label: item.name,\r\n        };\r\n      });\r\n    },\r\n    showModel (id) {\r\n      this.form.chosenmodeltype = id;\r\n      getListByCat(id).then((res) => {\r\n        // console.log(`output->res.name`, res);\r\n        this.form.model = this.handleModelList(res);\r\n      });\r\n    },\r\n    showParam (id) {\r\n      // console.log(`output->`,id)\r\n      getNetwork(id).then((res) => {\r\n        this.form.params = res;\r\n        // console.log(`output->`,this.form.params)\r\n      });\r\n    },\r\n    getDataset () {\r\n      getDataset().then((res) => {\r\n        this.form.dataset = this.handleModelList(res);\r\n      });\r\n    },\r\n    getChildDataset () {\r\n      getChildDataset(this.form.chosendataset).then((res) => {\r\n        this.form.childDataset = this.handleModelList(res);\r\n      });\r\n    },\r\n    show () {\r\n      getNetworkFunction().then((res) => {\r\n        console.log(`output->res`, res);\r\n        this.form.model_type = res;\r\n        // getListByCat(id).then(res=>{\r\n        //   console.log(`output->res`,res)\r\n        // })\r\n      });\r\n    },\r\n    searchExp (value) {\r\n      this.searchData = this.filteredData;\r\n    },\r\n    getModelParamPlus () {\r\n      this.next();\r\n      this.getDataset();\r\n    },\r\n    handleTrain (row) {\r\n      this.$confirm(\"是否开始训练？\", {\r\n        cancelButtonText: \"取消\",\r\n        confirmButtonText: \"确定\",\r\n        type: \"warning\",\r\n      })\r\n        .then((res) => {\r\n          if (res == \"confirm\") {\r\n            this.$message.success(\"训练开始\");\r\n            // console.log(`output->row.id`, row.id);\r\n            row.status = 2;\r\n            startTrain(row.id)\r\n              .then((res) => {\r\n                // console.log(`output->res`, res);\r\n                if (res.code == 200) {\r\n                  this.$message.success(res.msg);\r\n                  this.getList();\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                row.status = 3;\r\n                this.$message.error(\"训练出错了\");\r\n              });\r\n            //start\r\n            var interval = setInterval(() => {\r\n              row.percentage += 1;\r\n              row.tagStatus = \"\";\r\n              row.tagText = \"进行中\";\r\n              if (row.percentage == 100) {\r\n                row.status = \"success\";\r\n                row.tagStatus = \"success\";\r\n                row.tagText = \"完成\";\r\n                clearInterval(interval);\r\n              }\r\n            }, 100);\r\n\r\n            //end\r\n          }\r\n        })\r\n        .catch((res) => {\r\n          this.$message.warning(\"训练取消\");\r\n        });\r\n    },\r\n    viewRes (row) {\r\n      const index = this.tableData.findIndex((item) => item.id === row.id);\r\n      // index !== -1 ? index + 1 : -1;\r\n      this.tab = \"result\";\r\n      this.$nextTick(() => {\r\n        // this.getImage(row);\r\n        this.$refs.isExpand.toggleRowExpansion(this.tableData[index], true);\r\n      });\r\n    },\r\n    viewHis ({ id }) {\r\n      this.$router.push({ path: \"/train/history\", query: { id } })\r\n    },\r\n    handleDetail (row, expandedRows) {\r\n      if (expandedRows.length < 1) {\r\n        this.tab = \"details\";\r\n      }\r\n    },\r\n    handleModify (row) {\r\n      this.modifyParams = row.params;\r\n      this.modifyId = row.id;\r\n      // modifyParams(this.modifyId,this.modifyParams).then(res=>{\r\n      //   console.log(`output->res`,res)\r\n      // })\r\n      this.paramsDialogVisible = true;\r\n    },\r\n    onSubmit () {\r\n      var postform = { ...this.form.paramlist };\r\n      postform.model_name = this.form.model_name;\r\n      postform.model_description = this.form.model_description;\r\n      postform.dataset = this.form.chosenChildDataset;\r\n      postform.model_type = this.form.chosenmodeltype;\r\n      postform.network_id = this.form.chosenmodel;\r\n      // console.log(`output->postform`, postform);\r\n      uploadModel(postform).then((res) => {\r\n        // console.log(`output->res`, res);\r\n        if (res == \"添加成功\") {\r\n          this.dialogVisible = false\r\n          this.datasetVisible = false\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"上传成功!\",\r\n          });\r\n        } else {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: \"上传失败!\",\r\n          });\r\n        }\r\n      });\r\n      this.getList();\r\n    },\r\n    onModifySubmit () {\r\n      // console.log(`output->this.modifyId`, this.modifyId);\r\n      // console.log(`output->this.modifyParams`, this.modifyParams);\r\n      modifyParams(this.modifyId, this.modifyParams).then((res) => {\r\n        // console.log(`output->res`, res);\r\n        this.$message.success(\"修改成功\");\r\n        this.paramsDialogVisible = false;\r\n        this.getList();\r\n      });\r\n    },\r\n    getImage (row) {\r\n      getPic(row.path)\r\n        .then((response) => {\r\n          // console.log(`output->res`,response)\r\n          const imageUrl = URL.createObjectURL(response);\r\n          console.log(`output->imageUrl`, imageUrl);\r\n          row.imagePath = imageUrl;\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    // loadImage(row, tab) {\r\n    //   if (tab == \"result\" && row.status) {\r\n    //     // console.log(`output->1`);\r\n    //     this.getImage(row);\r\n    //   }\r\n    // },\r\n    getList () {\r\n      this.loading = true;\r\n      getModel().then((res) => {\r\n        // console.log(`output->res`,res)\r\n        this.tableData = res;\r\n        this.searchData = res;\r\n        this.loading = false;\r\n      });\r\n    },\r\n    // download({id}){\r\n    //   download(id).then(res=>{\r\n    //     // console.log(res);\r\n    //     const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    //     const link = document.createElement('a');\r\n    //     link.href = url;\r\n    //     link.setAttribute('download', 'file.pth');\r\n    //     document.body.appendChild(link);\r\n    //     link.click();\r\n    //     document.body.removeChild(link);\r\n    //   })\r\n    // }\r\n  },\r\n  computed: {\r\n    filteredData () {\r\n      return this.tableData.filter((item) =>\r\n        item.model_name.toLowerCase().includes(this.selectt.toLowerCase())\r\n      );\r\n    },\r\n    // datasetVisible: {\r\n    //   get() {\r\n    //     return this.$store.state.dataset.visible;\r\n    //   },\r\n    //   set(value) {\r\n    //     this.$store.state.dataset.visible = value;\r\n    //   },\r\n    // },\r\n  },\r\n  created () {\r\n    // console.log(`output->h`,this.$route.query)\r\n    if (this.$route.query.id) {\r\n      this.datasetVisible = true;\r\n      this.form.chosenChildDataset = this.$route.query.id\r\n      this.show()\r\n    }\r\n    // console.log(`output->this`, this.$store.state.dataset.visible);\r\n    this.getList();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-tabs {\r\n  width: 50%;\r\n  margin: auto;\r\n}\r\n\r\nimg {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.item {\r\n  margin-bottom: 18px;\r\n}\r\n\r\n.box-card {\r\n  width: 50%;\r\n  margin: auto;\r\n}\r\n</style>"]}]}