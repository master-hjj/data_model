{"remainingRequest":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\dataset\\sample\\index.vue?vue&type=style&index=0&id=7f569504&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\dataset\\sample\\index.vue","mtime":1720420573973},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1720430442968},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1720430443551},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1720430442809},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1720430443512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtdGFicyB7CiAgd2lkdGg6IDgwJTsKICBtYXJnaW46IGF1dG87Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6QA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dataset/sample","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"4\" :xs=\"24\">\r\n        <div class=\"head-container\">\r\n          <el-input v-model=\"selectt\" placeholder=\"请输入数据集名称\" clearable size=\"small\" prefix-icon=\"el-icon-search\"\r\n            style=\"margin-bottom: 20px\" @input=\"searchExp\" />\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"4\" :offset=\"16\"><el-button type=\"primary\" icon=\"el-icon-plus\" size=\"mini\"\r\n          @click=\"dialogVisible = true\">新建样本集</el-button>\r\n        <el-button type=\"info\" plain icon=\"el-icon-delete\" size=\"mini\" :disabled=\"multiple\"\r\n          @click=\"handleDelete\">删除</el-button></el-col>\r\n      <el-table :data=\"searchData\" style=\"width: 100%\" v-loading=\"loading\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column prop=\"select\" type=\"selection\" width=\"180\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"props\">\r\n            <el-tabs type=\"border-card\" @tab-click=\"getDetailed($event, props.row.id)\" value=\"first\" :stretch=\"true\">\r\n              <el-tab-pane label=\"基础信息\" name=\"first\">\r\n                表基础信息\r\n                <el-form>\r\n                  <el-form-item>\r\n                    样本集名称：{{ props.row.name }}\r\n                  </el-form-item>\r\n                  <el-form-item>\r\n                    样本集描述：{{ props.row.data_description }}\r\n                  </el-form-item>\r\n                  <el-form-item>\r\n                    样本集创建时间：{{ props.row.upload_date }}\r\n                  </el-form-item>\r\n                </el-form>\r\n              </el-tab-pane>\r\n              <el-tab-pane label=\"表结构\" name=\"second\">\r\n                <h1>该表有{{ row }}行,{{ col }}列</h1>\r\n              </el-tab-pane>\r\n              <el-tab-pane label=\"样例数据\" name=\"third\">\r\n                <div style=\"display: flex; justify-content: space-around\">\r\n                  <span>仅展示前\r\n                    <el-input style=\"width: 80px\" type=\"number\" v-model=\"showNum\"></el-input>\r\n                    条数据</span>\r\n                  <div>\r\n                    <router-link :to=\"`/dataset/sample/detail/${props.row.id}`\" class=\"link-type\">\r\n                      <el-button>选择参与训练数据</el-button>\r\n                    </router-link>\r\n                  </div>\r\n                </div>\r\n                <el-table :data=\"detailTable.slice(0, showNum)\" style=\"width: 100%\">\r\n                  <el-table-column v-for=\"(item, index) in dynamicTable\" :key=\"index\" :prop=\"item\" :label=\"item\"\r\n                    align=\"center\"></el-table-column>\r\n                </el-table>\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"样本集名称\" width=\"250\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"data_description\" label=\"样本集描述\" width=\"250\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"createtime\" label=\"创建时间\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ parseTime(scope.row.upload_date) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- <el-pagination\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :total=\"total\">\r\n      </el-pagination> -->\r\n\r\n      <!-- <pagination\r\n      v-show=\"total > 0\"\r\n      :total=\"total\"\r\n      :page.sync=\"queryParams.pageNum\"\r\n      :limit.sync=\"queryParams.pageSize\"\r\n      @pagination=\"getList\"\r\n    /> -->\r\n\r\n      <el-dialog title=\"新建样本集\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" name=\"form\">\r\n          <el-form-item label=\"样本集名称\" prop=\"name\">\r\n            <el-input v-model=\"form.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"样本集描述\" prop=\"data_description\">\r\n            <el-input type=\"textarea\" v-model=\"form.data_description\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"样本集导入方式\">\r\n            <el-radio-group v-model=\"importmethod\">\r\n              <el-radio label=\"本地数据导入\"></el-radio>\r\n              <el-radio label=\"OS对象数据同步\"></el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <!-- <input type=\"file\" @change=\"handleFileUpload\"> -->\r\n            <el-upload action=\"\" :before-remove=\"beforeRemove\" ref=\"upload\" multiple :limit=\"3\" :auto-upload=\"false\"\r\n              :on-change=\"handleUploadFile\" label=\"form\">\r\n              <el-button class=\"el-icon-upload2\">本地数据导入</el-button>\r\n            </el-upload>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"onSubmit\">提交</el-button>\r\n            <el-button @click=\"(event) => (this.dialogVisible = false)\">取消</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    postData,\r\n    getDataset,\r\n    delById,\r\n    getDetailData,\r\n    getRowCol,\r\n  } from \"@/api/dataset/dataset\";\r\n  import { at } from \"lodash\";\r\n  export default {\r\n    name: \"Sample\",\r\n    data () {\r\n      return {\r\n        at,\r\n        ids: [],\r\n        names: [],\r\n        importmethod: \"\",\r\n        total: 330,\r\n        row: 0,\r\n        col: 0,\r\n        showNum: 20,\r\n        sampleSetList: [],\r\n        detailTable: [],\r\n        dynamicTable: [],\r\n        searchData: [],\r\n        loading: false,\r\n        multiple: true,\r\n        form: {\r\n          name: \"1\",\r\n          data_description: \"1\",\r\n          dataFile: undefined,\r\n        },\r\n        rules: {\r\n          name: [\r\n            { required: true, message: \"请输入样本集名称\", trigger: \"blur\" },\r\n          ],\r\n          desc: [\r\n            { required: true, message: \"请输入样本集相关描述\", trigger: \"blur\" },\r\n          ],\r\n        },\r\n        dialogVisible: false,\r\n        selectt: \"\",\r\n        tableData: [],\r\n        data: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      searchExp (value) {\r\n        this.searchData = this.filteredData;\r\n      },\r\n      beforeRemove (file, fileList) {\r\n        return this.$confirm(`确定移除 ${file.name}？`);\r\n      },\r\n      handleUploadFile (file, fileList) {\r\n        this.form.dataFile = file.raw;\r\n      },\r\n      handleSelectionChange (selection) {\r\n        this.ids = selection.map((item) => item.id);\r\n        this.names = selection.map((item) => item.name);\r\n        this.single = selection.length != 1;\r\n        this.multiple = !selection.length;\r\n      },\r\n      handleDelete (row) {\r\n        const id = row.id || this.ids;\r\n        const name = row.name || this.names;\r\n        this.$modal\r\n          .confirm('是否确认删除名为\"' + name + '\"的数据项？')\r\n          .then(function () {\r\n            return delById(id);\r\n          })\r\n          .then(() => {\r\n            this.getList();\r\n            this.$modal.msgSuccess(\"删除成功\");\r\n          })\r\n          .catch(() => { });\r\n      },\r\n      onSubmit () {\r\n        let formData = new FormData();\r\n        formData.append(\"name\", this.form.name);\r\n        formData.append(\"data_description\", this.form.data_description);\r\n        formData.append(\"file\", this.form.dataFile);\r\n        // console.log(`output->this.form`, this.form);\r\n        postData(formData).then((res) => {\r\n          // console.log(`output->res`,res)\r\n          if (res == \"success\") {\r\n            this.dialogVisible = false;\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"上传成功!\",\r\n            });\r\n            this.getList();\r\n          } else {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: \"上传失败!\",\r\n            });\r\n          }\r\n        });\r\n      },\r\n      getList () {\r\n        this.loading = true;\r\n        getDataset().then((res) => {\r\n          // console.log(`output->res`,res)\r\n          this.tableData = res;\r\n          this.searchData = res;\r\n          this.loading = false;\r\n        });\r\n      },\r\n      getDetailed (el, id) {\r\n        if (el.index == 2) {\r\n          getDetailData(id).then((res) => {\r\n            res = JSON.parse(res)\r\n            this.dynamicTable = Object.keys(res[0]);\r\n            // console.log(this.dynamicTable);\r\n            this.detailTable = res.map((item, index) => {\r\n              return { ...item, ...res[index] };\r\n            });\r\n            // this.dynamicTable = res[0].map((e)=>{\r\n            //   return e.replace(/\\./g, '_')\r\n            // });\r\n            // this.detailTable = res.slice(1).map((item) => {\r\n            //   let obj = {};\r\n            //   this.dynamicTable.forEach((column, index) => {\r\n            //     obj[column] = item[index];\r\n            //   });\r\n            //   return obj;\r\n            // });\r\n            // console.log(`output->this.dynamicTable`,this.dynamicTable)\r\n            // console.log(`output->this.detailTable`,this.detailTable)\r\n          });\r\n        } else if (el.index == 1) {\r\n          getRowCol(id).then((res) => {\r\n            this.row = res.rows;\r\n            this.col = res.cols;\r\n          });\r\n        } else {\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      filteredData () {\r\n        return this.tableData.filter((item) =>\r\n          item.name.toLowerCase().includes(this.selectt.toLowerCase())\r\n        );\r\n      },\r\n    },\r\n    created () {\r\n      this.getList();\r\n    },\r\n    mounted () { },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .el-tabs {\r\n    width: 80%;\r\n    margin: auto;\r\n  }\r\n</style>"]}]}