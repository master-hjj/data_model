{"remainingRequest":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\model\\upload\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\model\\upload\\index.vue","mtime":1720420573978},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1720430444357},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1720430443512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/views/model/upload","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"4\" :xs=\"24\">\r\n        <div class=\"head-container\">\r\n          <el-input v-model=\"searchInput\" placeholder=\"请输入名称或创建人\" clearable size=\"small\" prefix-icon=\"el-icon-search\"\r\n            style=\"margin-bottom: 20px\" @input=\"searchExp\" />\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"4\" :offset=\"16\">\r\n        <!-- <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"handleSelect\"\r\n          >查看个人网络</el-button> -->\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"dialogVisible = true\">新建模型</el-button>\r\n        <el-button type=\"info\" plain icon=\"el-icon-delete\" :disabled=\"multiple\"\r\n          @click=\"handleDelete\">删除</el-button></el-col>\r\n      <el-table :data=\"searchData\" style=\"width: 100%\" v-loading=\"loading\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column prop=\"select\" type=\"selection\" width=\"180\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"props\">\r\n            <el-tabs>\r\n              <el-tab-pane label=\"基础信息\" name=\"first\"> page1 </el-tab-pane>\r\n              <el-tab-pane label=\"表结构\" name=\"second\">配置管理</el-tab-pane>\r\n              <el-tab-pane label=\"样例数据\" name=\"third\">\r\n                <el-table :data=\"tableData\" style=\"width: 100%\">\r\n                  <el-table-column prop=\"createtime\" label=\"strtime\" width=\"180\">\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"name\" label=\"intvalue\" width=\"180\">\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"createtime\" label=\"intID\">\r\n                  </el-table-column>\r\n                </el-table>\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"模型姓名\" width=\"250\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"category\" label=\"模型功能\" width=\"250\" align=\"center\" :filters=\"tags\"\r\n          :filter-method=\"handlefilter\" filter-placement=\"bottom-end\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"type\" label=\"模型类别\" align=\"center\" :filters=\"model_type_filt\"\r\n          :filter-method=\"handlefilter\" filter-placement=\"bottom-end\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"network_params\" label=\"模型参数\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"created_username\" label=\"创建人\" align=\"center\" :filters=\"creaters\"\r\n          :filter-method=\"handlefilter\" filter-placement=\"bottom-end\">\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <el-dialog title=\"上传模型\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" name=\"form\">\r\n          <el-form-item label=\"模型名称\" prop=\"name\">\r\n            <el-input v-model=\"form.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <div>模型功能：</div>\r\n            <el-select v-model=\"form.value\" placeholder=\"请选择\">\r\n              <!-- @visible-change=\"getNetworkFunc\" -->\r\n              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <div>模型类别：</div>\r\n            <el-select v-model=\"form.modeltypevalue\" placeholder=\"请选择\">\r\n              <el-option v-for=\"item in modeltype\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-upload action=\"\" :before-remove=\"beforeRemove\" ids ref=\"upload\" multiple :limit=\"3\" :auto-upload=\"false\"\r\n              :on-change=\"handleUploadFile\" label=\"form\">\r\n              <el-button class=\"el-icon-upload2\">模型文件上传</el-button>\r\n            </el-upload>\r\n          </el-form-item>\r\n          <div v-for=\"(item, index) in array\" :key=\"index\">\r\n            <el-form-item>\r\n              <span>参数{{ index + 1 }}: </span>\r\n              <el-input style=\"width: 20%; margin-right: 10px\" v-model=\"form.paramlist1[index]\"\r\n                :placeholder=\"`key${index + 1}`\"></el-input>\r\n              <el-input style=\"width: 20%; margin-right: 10px\" v-model=\"form.paramlist2[index]\"\r\n                :placeholder=\"`value${index + 1}`\"></el-input>\r\n              <el-button type=\"danger\" size=\"small\" icon=\"el-icon-delete\" circle @click=\"delParam(index)\"></el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"addParam\">添加参数</el-button>\r\n            <el-button type=\"primary\" @click=\"onSubmit\">提交</el-button>\r\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    uploadNetwork,\r\n    getNetworkFunction,\r\n    showNetworks,\r\n    delNetwork,\r\n    // getOwnNetwork,\r\n  } from \"@/api/model/upload\";\r\n  export default {\r\n    name: \"Upload\",\r\n    data () {\r\n      return {\r\n        options: [],\r\n        modeltype: [\r\n          {\r\n            value: \"0\",\r\n            label: \"机器学习\",\r\n          },\r\n          {\r\n            value: \"1\",\r\n            label: \"深度学习\",\r\n          },\r\n        ],\r\n        model_type_filt: [\r\n          {\r\n            value: \"机器学习\",\r\n            text: \"机器学习\",\r\n          },\r\n          {\r\n            value: \"深度学习\",\r\n            text: \"深度学习\",\r\n          },\r\n        ],\r\n        tags: [\r\n          { text: \"回归\", value: \"回归\" },\r\n          { text: \"信号处理\", value: \"信号处理\" },\r\n        ],\r\n\r\n        creaters: undefined,\r\n        array: [1],\r\n        ids: [],\r\n        names: [],\r\n        total: 330,\r\n        sampleSetList: [],\r\n        loading: true,\r\n        multiple: true,\r\n        single: true,\r\n        form: {\r\n          value: \"\",\r\n          modeltypevalue: \"\",\r\n          name: \"\",\r\n          file: undefined,\r\n          paramlist1: [],\r\n          paramlist2: [],\r\n        },\r\n        rules: {\r\n          name: [{ required: true, message: \"请输入模型名称\", trigger: \"blur\" }],\r\n        },\r\n        dialogVisible: false,\r\n        searchInput: \"\",\r\n        tableData: [],\r\n        searchData: [],\r\n        data: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      // handleTrain() {},\r\n      beforeRemove (file, fileList) {\r\n        return this.$confirm(`确定移除 ${file.name}？`);\r\n      },\r\n      handleUploadFile (file, fileList) {\r\n        console.log(`output->file`, file);\r\n        this.form.file = file.raw;\r\n      },\r\n      handleSelectionChange (selection) {\r\n        this.ids = selection.map((item) => item.id);\r\n        this.names = selection.map((item) => item.name);\r\n        this.single = selection.length != 1;\r\n        this.multiple = !selection.length;\r\n      },\r\n      handleDelete (row) {\r\n        const name = row.name || this.names;\r\n        const id = row.id || this.ids;\r\n        this.$modal\r\n          .confirm('是否确认删除网络名称为\"' + name + '\"的数据项？')\r\n          .then(function () {\r\n            return delNetwork(id);\r\n          })\r\n          .then(() => {\r\n            this.$modal.msgSuccess(\"删除成功\");\r\n            this.getList();\r\n          })\r\n          .catch(() => { });\r\n      },\r\n      addParam () {\r\n        this.array.push(1);\r\n        this.$message.success(\"添加参数成功!\");\r\n      },\r\n      delParam (index) {\r\n        this.form.paramlist1.splice(index, 1); //先删除form中value对应索引的值\r\n        this.form.paramlist2.splice(index, 1); //先删除form中value对应索引的值\r\n        if (this.array.length < 2) {\r\n          this.$message.warning(\"至少需要一个参数！\");\r\n        } else {\r\n          this.$message.success(\"删除参数成功!\");\r\n          this.array.splice(index, 1); //然后删除array对应索引的值，实现点击删除按钮，减少input框效果\r\n        }\r\n      },\r\n      onSubmit () {\r\n        var postform = {};\r\n        postform.network_name = this.form.name;\r\n        postform.network_func = this.form.value;\r\n        postform.is_deep = this.form.modeltypevalue;\r\n        postform.file = this.form.file;\r\n        for (const k in this.form.paramlist1) {\r\n          Object.defineProperty(postform, \"key\" + (parseInt(k) + 1), {\r\n            value: this.form.paramlist1[k],\r\n            enumerable: true,\r\n          });\r\n        }\r\n        for (const k in this.form.paramlist2) {\r\n          Object.defineProperty(postform, \"value\" + (parseInt(k) + 1), {\r\n            value: this.form.paramlist2[k],\r\n            enumerable: true,\r\n          });\r\n        }\r\n        console.log(`output->t`, postform);\r\n        const formData = new FormData();\r\n\r\n        // 遍历 postform 对象的属性并将其添加到 formData 中\r\n        for (const key in postform) {\r\n          formData.append(key, postform[key]);\r\n          // 如果属性值是文件类型，则使用文件对象作为参数添加到 formData 中\r\n          // if (\r\n          //   typeof postform[key] === \"object\" &&\r\n          //   postform[key].type === \"file\"\r\n          // ) {\r\n          //   formData.append(key, postform[key].file); // 假设 file 是一个文件对象\r\n          // } else {\r\n          //   formData.append(key, postform[key]);\r\n          // }\r\n        }\r\n        console.log(formData);\r\n        uploadNetwork(formData).then((res) => {\r\n          console.log(`output->res`, res);\r\n          // console.log(`output->`);\r\n          this.$message.success(res);\r\n          this.dialogVisible = false;\r\n          this.getList();\r\n          // if (res.status == 200) {\r\n          //   this.dialogVisible = false;\r\n          //   this.$message({\r\n          //     type: \"success\",\r\n          //     message: \"上传成功!\",\r\n          //   });\r\n          // } else {\r\n          //   this.$message({\r\n          //     type: \"error\",\r\n          //     message: \"上传失败!\",\r\n          //   });\r\n          // }\r\n        });\r\n      },\r\n      getList () {\r\n        this.loading = true;\r\n        showNetworks().then((res) => {\r\n          // console.log(`output->res`,res)\r\n          this.tableData = res;\r\n          this.searchData = res;\r\n          this.loading = false;\r\n        });\r\n      },\r\n      getNetworkFunc () {\r\n        getNetworkFunction().then((res) => {\r\n          this.options = res;\r\n          this.tags = this.options.map((item) => ({\r\n            text: item.label,\r\n            value: item.label,\r\n          }));\r\n        });\r\n      },\r\n      handlefilter (value, row, { property }) {\r\n        return row[property] === value;\r\n      },\r\n      searchExp (value) {\r\n        this.searchData = this.filteredData;\r\n      },\r\n    },\r\n    computed: {\r\n      filteredData () {\r\n        return this.tableData.filter(\r\n          (item) =>\r\n            item.name.toLowerCase().includes(this.searchInput.toLowerCase()) ||\r\n            item.created_username\r\n              .toLowerCase()\r\n              .includes(this.searchInput.toLowerCase())\r\n        );\r\n      },\r\n    },\r\n    created () {\r\n      this.getList();\r\n      this.getNetworkFunc();\r\n      const name = this.$store.state.user.name;\r\n      this.creaters = [{ text: name, value: name }];\r\n      // console.log(`output->this.creaters`, name);\r\n    },\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}