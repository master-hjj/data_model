{"remainingRequest":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\stream\\draggable\\preprocess.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\stream\\draggable\\preprocess.vue","mtime":1720420573985},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1720430444357},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1720430443512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["preprocess.vue"],"names":[],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"preprocess.vue","sourceRoot":"src/views/stream/draggable","sourcesContent":["<template></template>\r\n\r\n<script>\r\n  import { showpreprocess, classifiedpreprocess } from \"@/api/preprocess/upload\";\r\n  import go from 'gojs'\r\n  const $ = go.GraphObject.make;\r\n  export default {\r\n    name: \"Draggable\",\r\n    data () {\r\n      return {\r\n        preprocess_node: undefined,\r\n        model_node: undefined,\r\n        shape: ['Circle', 'Square', 'RoundedRectangle', 'Rectangle', 'Ellipse', 'Triangle'],\r\n        color: ['#99FF00', '#FF6600', '#FF33CC', '#6633FF', '#009966']\r\n      }\r\n    },\r\n\r\n    mounted () {\r\n      classifiedpreprocess().then(res => {\r\n        // console.log(res);\r\n        this.preprocess_node = res\r\n        // console.log(this.preprocess_node);\r\n        this.init()\r\n      })\r\n\r\n    },\r\n    methods: {\r\n      save () {\r\n        var mySelf = this;\r\n        console.log(mySelf.myDiagram.model.toJson());\r\n        mySelf.myDiagram.isModified = false;\r\n      },\r\n      init () {\r\n        class DemoForceDirectedLayout extends go.ForceDirectedLayout { //布局\r\n          makeNetwork (coll) {\r\n            const net = super.makeNetwork(coll);\r\n            net.vertexes.each(vertex => {\r\n              const node = vertex.node;\r\n              if (node !== null) vertex.isFixed = node.isSelected;\r\n            });\r\n            return net;\r\n          }\r\n        }\r\n        var mySelf = this;\r\n\r\n        mySelf.myDiagram =\r\n          $(go.Diagram, \"myDiagramDiv\",  // 为DIV.HTML元素创建一个画布\r\n            {\r\n              //设置画布配置\r\n              initialContentAlignment: go.Spot.Center, // 居中显示\r\n              \"undoManager.isEnabled\": true, // 支持 Ctrl-Z 和 Ctrl-Y 操作\r\n              \"toolManager.hoverDelay\": 100, //tooltip提示显示延时\r\n              \"toolManager.toolTipDuration\": 10000, //tooltip持续显示时间\r\n              //isReadOnly:true,//只读\r\n              \"grid.visible\": true, //显示网格\r\n              allowMove: true, //允许拖动\r\n              allowDragOut: true,\r\n              allowDelete: true,\r\n              allowCopy: true,\r\n              allowClipboard: true, initialAutoScale: go.Diagram.Uniform,  // 缩放以使所有内容都适合\r\n\r\n              \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom, //有鼠标滚轮事件放大和缩小，而不是向上和向下滚动\r\n              'clickCreatingTool.archetypeNodeData': { category: 'model', text: '新节点', notice: '' }, // 双击新建节点(可以写入节点的默认信息)；\r\n              layout: new DemoForceDirectedLayout()\r\n            });\r\n\r\n        mySelf.myDiagram.linkTemplate = $(go.Link, {\r\n          selectable: true, //连接线是否可选\r\n          relinkableFrom: true,//出发点是否可以改变\r\n          relinkableTo: true,//目标点是否可以改变\r\n        }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n          $(go.Shape, {\r\n            strokeWidth: 2,//节点连接线宽度\r\n            stroke: \"#F60\"//颜色\r\n          }),\r\n          $(go.Shape, {\r\n            toArrow: \"Standard\",\r\n            fill: \"red\",//箭头填充色\r\n            stroke: \"blue\"//外边框颜色\r\n          })//箭头\r\n        );\r\n        var count = 0\r\n        for (var key in this.preprocess_node) {\r\n          mySelf.myDiagram.nodeTemplateMap.add(//创建名为node258的节点\r\n            key,\r\n            $(go.Node,\r\n              \"auto\",\r\n              {\r\n                movable: true,//是否可拖动\r\n                deletable: true,//是否可删除\r\n                selectable: true, //是否可选择\r\n                selectionAdorned: false, //显示选中边框\r\n                // reshapable:true, // 重塑(改变shape形状边界时使用，将影响节点大小)\r\n                // resizable: true, // 可调整大小的(手动调整节点大小时，节点内容显示区域时使用)\r\n              }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n              $(go.Panel, //表明需要创建一个panel面板对象//声明创建一个新的面板对象,自定义方式可参考mySelf.myDiagram.nodeTemplate\r\n                \"Auto\", //页面布局为自动\r\n                $(go.Shape,//声明构建一个圆形\r\n                  // this.shape[count], \r\n                  'Circle',\r\n                  {\r\n                    fill: this.color[count],\r\n                    cursor: \"pointer\",//指针\r\n                    stroke: null,//外框颜色null\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    fromLinkableSelfNode: false,\r\n                    fromLinkableDuplicates: true,\r\n                    toLinkable: true,\r\n                    toLinkableSelfNode: false,\r\n                    toLinkableDuplicates: false,\r\n                  },\r\n                  new go.Binding(\"figure\", \"figure\") //声明并创建一个新的图形\r\n                ),\r\n                $(go.TextBlock, {//声明一个可编辑文本域\r\n                  font: \"10pt Helvetica, Arial, sans-serif\",\r\n                  width: 50,\r\n                  maxSize: new go.Size(180, NaN),\r\n                  wrap: go.TextBlock.WrapFit, //文本域换行\r\n                  editable: true, //是否可编辑\r\n                  margin: 6,\r\n                },\r\n                  new go.Binding(\"text\").makeTwoWay()\r\n                ),\r\n              ),\r\n              {//  悬浮提示\r\n                toolTip:\r\n                  $(\"ToolTip\",\r\n                    $(go.TextBlock, { margin: 4 },\r\n                      new go.Binding(\"text\", key))\r\n                  ),\r\n              }\r\n            )\r\n          );\r\n          count = count + 1\r\n\r\n        }\r\n\r\n\r\n        // let myModel = $(go.GraphLinksModel); //也可以创建link model;需要配置myModel.linkDataArray 如下\r\n        // myModel.nodeDataArray = mySelf.nodeData;\r\n        // myModel.linkDataArray = mySelf.linkData;\r\n        // mySelf.myDiagram.model = myModel;\r\n\r\n        // mySelf.myDiagram.model.nodeDataArray = mySelf.nodeData;\r\n        // mySelf.myDiagram.model.linkDataArray = mySelf.linkData;\r\n        mySelf.initPalette();\r\n\r\n        mySelf.myDiagram.addDiagramListener(\"Modified\", e => { //监听画布是否修改\r\n          const button = document.getElementById(\"SaveButton\");\r\n          if (button) button.disabled = !mySelf.myDiagram.isModified;\r\n          const idx = document.title.indexOf(\"*\");\r\n          if (mySelf.myDiagram.isModified) {\r\n            if (idx < 0) document.title += \"*\";\r\n          } else {\r\n            if (idx >= 0) document.title = document.title.slice(0, idx);\r\n          }\r\n        });\r\n      },\r\n      initPalette () {\r\n        var mySelf = this;\r\n        const transformedData = [];\r\n\r\n        for (const category in this.preprocess_node) {\r\n          const texts = this.preprocess_node[category];\r\n          texts.forEach(text => {\r\n            transformedData.push({ category, text });\r\n          });\r\n        }\r\n\r\n        // console.log(transformedData);\r\n        window.myPalette = $(\r\n          go.Palette,\r\n          \"myPalette\", // 必须命名或引用DIV.HTML元素\r\n          {\r\n            scrollsPageOnFocus: false,\r\n            nodeTemplateMap: mySelf.myDiagram.nodeTemplateMap, // 共享myDiagram使用的模板\r\n            model: new go.GraphLinksModel(transformedData)\r\n          }\r\n        );\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n"]}]}