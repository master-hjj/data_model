{"remainingRequest":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\model\\upload\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\src\\views\\model\\upload\\index.vue","mtime":1720420573978},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\babel.config.js","mtime":1720420573884},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1720430444357},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720430444311},{"path":"C:\\Users\\m1980\\Desktop\\buct-kaggle\\data_model\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1720430443512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_upload","require","name","data","options","modeltype","value","label","model_type_filt","text","tags","creaters","undefined","array","ids","names","total","sampleSetList","loading","multiple","single","form","modeltypevalue","file","paramlist1","paramlist2","rules","required","message","trigger","dialogVisible","searchInput","tableData","searchData","methods","beforeRemove","fileList","$confirm","concat","handleUploadFile","console","log","raw","handleSelectionChange","selection","map","item","id","length","handleDelete","row","_this","$modal","confirm","then","delNetwork","msgSuccess","getList","catch","addParam","push","$message","success","delParam","index","splice","warning","onSubmit","_this2","postform","network_name","network_func","is_deep","k","Object","defineProperty","parseInt","enumerable","formData","FormData","key","append","uploadNetwork","res","_this3","showNetworks","getNetworkFunc","_this4","getNetworkFunction","handlefilter","_ref","property","searchExp","filteredData","computed","_this5","filter","toLowerCase","includes","created_username","created","$store","state","user"],"sources":["src/views/model/upload/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"4\" :xs=\"24\">\r\n        <div class=\"head-container\">\r\n          <el-input v-model=\"searchInput\" placeholder=\"请输入名称或创建人\" clearable size=\"small\" prefix-icon=\"el-icon-search\"\r\n            style=\"margin-bottom: 20px\" @input=\"searchExp\" />\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"4\" :offset=\"16\">\r\n        <!-- <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"handleSelect\"\r\n          >查看个人网络</el-button> -->\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"dialogVisible = true\">新建模型</el-button>\r\n        <el-button type=\"info\" plain icon=\"el-icon-delete\" :disabled=\"multiple\"\r\n          @click=\"handleDelete\">删除</el-button></el-col>\r\n      <el-table :data=\"searchData\" style=\"width: 100%\" v-loading=\"loading\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column prop=\"select\" type=\"selection\" width=\"180\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"props\">\r\n            <el-tabs>\r\n              <el-tab-pane label=\"基础信息\" name=\"first\"> page1 </el-tab-pane>\r\n              <el-tab-pane label=\"表结构\" name=\"second\">配置管理</el-tab-pane>\r\n              <el-tab-pane label=\"样例数据\" name=\"third\">\r\n                <el-table :data=\"tableData\" style=\"width: 100%\">\r\n                  <el-table-column prop=\"createtime\" label=\"strtime\" width=\"180\">\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"name\" label=\"intvalue\" width=\"180\">\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"createtime\" label=\"intID\">\r\n                  </el-table-column>\r\n                </el-table>\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"模型姓名\" width=\"250\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"category\" label=\"模型功能\" width=\"250\" align=\"center\" :filters=\"tags\"\r\n          :filter-method=\"handlefilter\" filter-placement=\"bottom-end\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"type\" label=\"模型类别\" align=\"center\" :filters=\"model_type_filt\"\r\n          :filter-method=\"handlefilter\" filter-placement=\"bottom-end\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"network_params\" label=\"模型参数\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"created_username\" label=\"创建人\" align=\"center\" :filters=\"creaters\"\r\n          :filter-method=\"handlefilter\" filter-placement=\"bottom-end\">\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <el-dialog title=\"上传模型\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" name=\"form\">\r\n          <el-form-item label=\"模型名称\" prop=\"name\">\r\n            <el-input v-model=\"form.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <div>模型功能：</div>\r\n            <el-select v-model=\"form.value\" placeholder=\"请选择\">\r\n              <!-- @visible-change=\"getNetworkFunc\" -->\r\n              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <div>模型类别：</div>\r\n            <el-select v-model=\"form.modeltypevalue\" placeholder=\"请选择\">\r\n              <el-option v-for=\"item in modeltype\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-upload action=\"\" :before-remove=\"beforeRemove\" ids ref=\"upload\" multiple :limit=\"3\" :auto-upload=\"false\"\r\n              :on-change=\"handleUploadFile\" label=\"form\">\r\n              <el-button class=\"el-icon-upload2\">模型文件上传</el-button>\r\n            </el-upload>\r\n          </el-form-item>\r\n          <div v-for=\"(item, index) in array\" :key=\"index\">\r\n            <el-form-item>\r\n              <span>参数{{ index + 1 }}: </span>\r\n              <el-input style=\"width: 20%; margin-right: 10px\" v-model=\"form.paramlist1[index]\"\r\n                :placeholder=\"`key${index + 1}`\"></el-input>\r\n              <el-input style=\"width: 20%; margin-right: 10px\" v-model=\"form.paramlist2[index]\"\r\n                :placeholder=\"`value${index + 1}`\"></el-input>\r\n              <el-button type=\"danger\" size=\"small\" icon=\"el-icon-delete\" circle @click=\"delParam(index)\"></el-button>\r\n            </el-form-item>\r\n          </div>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"addParam\">添加参数</el-button>\r\n            <el-button type=\"primary\" @click=\"onSubmit\">提交</el-button>\r\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    uploadNetwork,\r\n    getNetworkFunction,\r\n    showNetworks,\r\n    delNetwork,\r\n    // getOwnNetwork,\r\n  } from \"@/api/model/upload\";\r\n  export default {\r\n    name: \"Upload\",\r\n    data () {\r\n      return {\r\n        options: [],\r\n        modeltype: [\r\n          {\r\n            value: \"0\",\r\n            label: \"机器学习\",\r\n          },\r\n          {\r\n            value: \"1\",\r\n            label: \"深度学习\",\r\n          },\r\n        ],\r\n        model_type_filt: [\r\n          {\r\n            value: \"机器学习\",\r\n            text: \"机器学习\",\r\n          },\r\n          {\r\n            value: \"深度学习\",\r\n            text: \"深度学习\",\r\n          },\r\n        ],\r\n        tags: [\r\n          { text: \"回归\", value: \"回归\" },\r\n          { text: \"信号处理\", value: \"信号处理\" },\r\n        ],\r\n\r\n        creaters: undefined,\r\n        array: [1],\r\n        ids: [],\r\n        names: [],\r\n        total: 330,\r\n        sampleSetList: [],\r\n        loading: true,\r\n        multiple: true,\r\n        single: true,\r\n        form: {\r\n          value: \"\",\r\n          modeltypevalue: \"\",\r\n          name: \"\",\r\n          file: undefined,\r\n          paramlist1: [],\r\n          paramlist2: [],\r\n        },\r\n        rules: {\r\n          name: [{ required: true, message: \"请输入模型名称\", trigger: \"blur\" }],\r\n        },\r\n        dialogVisible: false,\r\n        searchInput: \"\",\r\n        tableData: [],\r\n        searchData: [],\r\n        data: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      // handleTrain() {},\r\n      beforeRemove (file, fileList) {\r\n        return this.$confirm(`确定移除 ${file.name}？`);\r\n      },\r\n      handleUploadFile (file, fileList) {\r\n        console.log(`output->file`, file);\r\n        this.form.file = file.raw;\r\n      },\r\n      handleSelectionChange (selection) {\r\n        this.ids = selection.map((item) => item.id);\r\n        this.names = selection.map((item) => item.name);\r\n        this.single = selection.length != 1;\r\n        this.multiple = !selection.length;\r\n      },\r\n      handleDelete (row) {\r\n        const name = row.name || this.names;\r\n        const id = row.id || this.ids;\r\n        this.$modal\r\n          .confirm('是否确认删除网络名称为\"' + name + '\"的数据项？')\r\n          .then(function () {\r\n            return delNetwork(id);\r\n          })\r\n          .then(() => {\r\n            this.$modal.msgSuccess(\"删除成功\");\r\n            this.getList();\r\n          })\r\n          .catch(() => { });\r\n      },\r\n      addParam () {\r\n        this.array.push(1);\r\n        this.$message.success(\"添加参数成功!\");\r\n      },\r\n      delParam (index) {\r\n        this.form.paramlist1.splice(index, 1); //先删除form中value对应索引的值\r\n        this.form.paramlist2.splice(index, 1); //先删除form中value对应索引的值\r\n        if (this.array.length < 2) {\r\n          this.$message.warning(\"至少需要一个参数！\");\r\n        } else {\r\n          this.$message.success(\"删除参数成功!\");\r\n          this.array.splice(index, 1); //然后删除array对应索引的值，实现点击删除按钮，减少input框效果\r\n        }\r\n      },\r\n      onSubmit () {\r\n        var postform = {};\r\n        postform.network_name = this.form.name;\r\n        postform.network_func = this.form.value;\r\n        postform.is_deep = this.form.modeltypevalue;\r\n        postform.file = this.form.file;\r\n        for (const k in this.form.paramlist1) {\r\n          Object.defineProperty(postform, \"key\" + (parseInt(k) + 1), {\r\n            value: this.form.paramlist1[k],\r\n            enumerable: true,\r\n          });\r\n        }\r\n        for (const k in this.form.paramlist2) {\r\n          Object.defineProperty(postform, \"value\" + (parseInt(k) + 1), {\r\n            value: this.form.paramlist2[k],\r\n            enumerable: true,\r\n          });\r\n        }\r\n        console.log(`output->t`, postform);\r\n        const formData = new FormData();\r\n\r\n        // 遍历 postform 对象的属性并将其添加到 formData 中\r\n        for (const key in postform) {\r\n          formData.append(key, postform[key]);\r\n          // 如果属性值是文件类型，则使用文件对象作为参数添加到 formData 中\r\n          // if (\r\n          //   typeof postform[key] === \"object\" &&\r\n          //   postform[key].type === \"file\"\r\n          // ) {\r\n          //   formData.append(key, postform[key].file); // 假设 file 是一个文件对象\r\n          // } else {\r\n          //   formData.append(key, postform[key]);\r\n          // }\r\n        }\r\n        console.log(formData);\r\n        uploadNetwork(formData).then((res) => {\r\n          console.log(`output->res`, res);\r\n          // console.log(`output->`);\r\n          this.$message.success(res);\r\n          this.dialogVisible = false;\r\n          this.getList();\r\n          // if (res.status == 200) {\r\n          //   this.dialogVisible = false;\r\n          //   this.$message({\r\n          //     type: \"success\",\r\n          //     message: \"上传成功!\",\r\n          //   });\r\n          // } else {\r\n          //   this.$message({\r\n          //     type: \"error\",\r\n          //     message: \"上传失败!\",\r\n          //   });\r\n          // }\r\n        });\r\n      },\r\n      getList () {\r\n        this.loading = true;\r\n        showNetworks().then((res) => {\r\n          // console.log(`output->res`,res)\r\n          this.tableData = res;\r\n          this.searchData = res;\r\n          this.loading = false;\r\n        });\r\n      },\r\n      getNetworkFunc () {\r\n        getNetworkFunction().then((res) => {\r\n          this.options = res;\r\n          this.tags = this.options.map((item) => ({\r\n            text: item.label,\r\n            value: item.label,\r\n          }));\r\n        });\r\n      },\r\n      handlefilter (value, row, { property }) {\r\n        return row[property] === value;\r\n      },\r\n      searchExp (value) {\r\n        this.searchData = this.filteredData;\r\n      },\r\n    },\r\n    computed: {\r\n      filteredData () {\r\n        return this.tableData.filter(\r\n          (item) =>\r\n            item.name.toLowerCase().includes(this.searchInput.toLowerCase()) ||\r\n            item.created_username\r\n              .toLowerCase()\r\n              .includes(this.searchInput.toLowerCase())\r\n        );\r\n      },\r\n    },\r\n    created () {\r\n      this.getList();\r\n      this.getNetworkFunc();\r\n      const name = this.$store.state.user.name;\r\n      this.creaters = [{ text: name, value: name }];\r\n      // console.log(`output->this.creaters`, name);\r\n    },\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":"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","ignoreList":[]}]}